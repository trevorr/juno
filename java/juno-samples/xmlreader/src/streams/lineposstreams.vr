/*
 * Copyright (C) 2005 Newisys, Inc. or its licensors, as applicable.
 *
 * Licensed under the Open Software License version 2.0 (the "License"); you
 * may not use this file except in compliance with the License. You should
 * have received a copy of the License along with this software; if not, you
 * may obtain a copy of the License at
 *
 * http://opensource.org/licenses/osl-2.0.php
 *
 * This software is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

#include "streams.vrh"

////////////////////////////////////////////////////////////
// LinePosInputStream
////////////////////////////////////////////////////////////

class LinePosInputStream
extends InputStream
{
    local InputStream stream;
    local integer line;
    local integer column;

    task new(InputStream _stream)
    {
        stream = _stream;
        line = 1;
        column = 1;
    }

    function integer getLineNumber()
    {
        getLineNumber = line;
    }

    function integer getColumnNumber()
    {
        getColumnNumber = column;
    }

    virtual function integer read()
    {
        read = stream.read();
        if (read == 8'h0A) {
            ++line;
            column = 1;
        }
        else if (read != -1) {
            ++column;
        }
    }

    virtual function string readLine()
    {
        readLine = stream.readLine();
        if (readLine != null) {
            ++line;
            column = 1;
        }
    }

    virtual task close()
    {
        stream.close();
    }
}

////////////////////////////////////////////////////////////
// LinePosOutputStream
////////////////////////////////////////////////////////////

class LinePosOutputStream
extends OutputStream
{
    local OutputStream stream;
    local integer line;
    local integer column;

    task new(OutputStream _stream)
    {
        stream = _stream;
        line = 1;
        column = 1;
    }

    function integer getLineNumber()
    {
        getLineNumber = line;
    }

    function integer getColumnNumber()
    {
        getColumnNumber = column;
    }

    virtual task write(integer b)
    {
        stream.write(b);
        if (b == 8'h0A) {
            ++line;
            column = 1;
        }
        else {
            ++column;
        }
    }

    virtual task writeLine(string s)
    {
        stream.writeLine(s);
        ++line;
        column = 1;
    }

    virtual task flush()
    {
        stream.flush();
    }

    virtual task close()
    {
        stream.close();
    }
}

