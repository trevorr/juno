/*
 * Copyright (C) 2005 Newisys, Inc. or its licensors, as applicable.
 *
 * Licensed under the Open Software License version 2.0 (the "License"); you
 * may not use this file except in compliance with the License. You should
 * have received a copy of the License along with this software; if not, you
 * may obtain a copy of the License at
 *
 * http://opensource.org/licenses/osl-2.0.php
 *
 * This software is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

// key type defines

#define KEY_TYPE Object
#define KEY_NULL null

#define KEY_DUMP_STRING(o) ((o != null) ? o.dumpString() : "(null)")
#define KEY_EQUALS(a,b) ((a != null) ? a.equals(b) : (b == null))
#define KEY_HASH_CODE(o) ((o != null) ? o.hashCode() : 0)
#define KEY_DESTROY(o) if (o != null) o.destroy()

#define KEY_SET_CLASS Set
#define KEY_ITERATOR_CLASS Iterator
#define KEY_COMPARATOR_CLASS Comparator
#define DEFAULT_KEY_COMPARATOR_CLASS ObjectIDComparator

// value type defines

#define VALUE_TYPE Object
#define VALUE_NULL null

#define VALUE_DUMP_STRING(o) ((o != null) ? o.dumpString() : "(null)")
#define VALUE_EQUALS(a,b) ((a != null) ? a.equals(b) : (b == null))
#define VALUE_HASH_CODE(o) ((o != null) ? o.hashCode() : 0)
#define VALUE_DESTROY(o) if (o != null) o.destroy()

#define VALUE_COLLECTION_CLASS Collection
#define VALUE_ITERATOR_CLASS Iterator

// Map defines

#define MAP_CLASS Map
#define MAP_ENTRY_CLASS MapEntry
#define MAP_KEY_SET_CLASS MapKeySet
#define MAP_VALUE_COLLECTION_CLASS MapValueCollection
#define ENTRY_SET_KEY_ITERATOR_CLASS EntrySetKeyIterator
#define ENTRY_SET_VALUE_ITERATOR_CLASS EntrySetValueIterator

// HashMap defines

#define HASH_MAP_CLASS HashMap
#define HASH_MAP_ENTRY_CLASS HashMapEntry
#define HASH_MAP_ENTRY_SET_CLASS HashMapEntrySet
#define HASH_MAP_KEY_SET_CLASS HashMapKeySet
#define HASH_MAP_VALUE_COLLECTION_CLASS HashMapValueCollection
#define HASH_MAP_ENTRY_ITERATOR_CLASS HashMapEntryIterator

// LinkedHashMap defines

#define LINKED_HASH_MAP_CLASS LinkedHashMap
#define LINKED_HASH_MAP_ENTRY_CLASS LinkedHashMapEntry
#define LINKED_HASH_MAP_ENTRY_SET_CLASS LinkedHashMapEntrySet
#define LINKED_HASH_MAP_KEY_SET_CLASS LinkedHashMapKeySet
#define LINKED_HASH_MAP_VALUE_COLLECTION_CLASS LinkedHashMapValueCollection
#define LINKED_HASH_MAP_ENTRY_ITERATOR_CLASS LinkedHashMapEntryIterator

// SortedMap defines

#define SORTED_MAP_CLASS SortedMap

// TreeMap defines

#define TREE_MAP_CLASS TreeMap
#define TREE_MAP_ENTRY_CLASS TreeMapEntry
#define TREE_MAP_ENTRY_SET_CLASS TreeMapEntrySet
#define TREE_MAP_KEY_SET_CLASS TreeMapKeySet
#define TREE_MAP_VALUE_COLLECTION_CLASS TreeMapValueCollection
#define TREE_MAP_ENTRY_ITERATOR_CLASS TreeMapEntryIterator
#define TREE_MAP_SUB_MAP_CLASS TreeMapSubMap
#define TREE_MAP_SUB_MAP_ENTRY_SET_CLASS TreeMapSubMapEntrySet

