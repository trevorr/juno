/*
 * Copyright (C) 2005 Newisys, Inc. or its licensors, as applicable.
 *
 * Licensed under the Open Software License version 2.0 (the "License"); you
 * may not use this file except in compliance with the License. You should
 * have received a copy of the License along with this software; if not, you
 * may obtain a copy of the License at
 *
 * http://opensource.org/licenses/osl-2.0.php
 *
 * This software is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

////////////////////////////////////////////////////////////
// Set
////////////////////////////////////////////////////////////

virtual class SET_CLASS
extends COLLECTION_CLASS
{
    // Object
    virtual function bit equals(Object o);
    virtual function integer hashCode();
}

function bit SET_CLASS::equals(Object o)
{
    Object thisObject;
    COLLECTION_CLASS otherCollection;

    thisObject = this;
    if (o == thisObject) {
        equals = 1;
        return;
    }
    if (!cast_assign(otherCollection, o, CHECK)) {
        equals = 0;
        return;
    }
    if (size() != otherCollection.size()) {
        equals = 0;
        return;
    }

    equals = containsAll(otherCollection);
}

function integer SET_CLASS::hashCode()
{
    ITERATOR_CLASS i;
    integer h;

    i = iterator();
    h = 0;
    while (i.hasNext()) {
        ELEMENT_TYPE io;

        io = i.next();
        h += HASH_CODE(io);
    }

    hashCode = h;
}

