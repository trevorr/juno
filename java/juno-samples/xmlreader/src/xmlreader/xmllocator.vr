/*
 * Copyright (C) 2005 Newisys, Inc. or its licensors, as applicable.
 *
 * Licensed under the Open Software License version 2.0 (the "License"); you
 * may not use this file except in compliance with the License. You should
 * have received a copy of the License along with this software; if not, you
 * may obtain a copy of the License at
 *
 * http://opensource.org/licenses/osl-2.0.php
 *
 * This software is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

#include "sax.vrh"
#include "parsestream.vrh"

////////////////////////////////////////////////////////////
// XmlStaticLocator
////////////////////////////////////////////////////////////

class XmlStaticLocator
extends SaxLocator
{
    local string publicId;
    local string systemId;
    local integer line;
    local integer column;

    task new(string _publicId, string _systemId, integer _line, integer _column)
    {
        publicId = _publicId;
        systemId = _systemId;
        line = _line;
        column = _column;
    }

    // Return the public identifier for the current document event.
    virtual function string getPublicId()
    {
        getPublicId = publicId;
    }

    // Return the system identifier for the current document event.
    virtual function string getSystemId()
    {
        getSystemId = systemId;
    }

    // Return the line number where the current document event ends.
    virtual function integer getLineNumber()
    {
        getLineNumber = line;
    }

    // Return the column number where the current document event ends.
    virtual function integer getColumnNumber()
    {
        getColumnNumber = column;
    }
}

////////////////////////////////////////////////////////////
// XmlActiveLocator
////////////////////////////////////////////////////////////

class XmlActiveLocator
extends SaxLocator
{
    local ParseStream parseStream;
    local string publicId;
    local string systemId;

    task new(ParseStream _parseStream)
    {
        parseStream = _parseStream;
    }

    // Return the public identifier for the current document event.
    virtual function string getPublicId()
    {
        getPublicId = publicId;
    }

    // Return the system identifier for the current document event.
    virtual function string getSystemId()
    {
        getSystemId = systemId;
    }

    // Return the line number where the current document event ends.
    virtual function integer getLineNumber()
    {
        getLineNumber = parseStream.getLineNumber();
    }

    // Return the column number where the current document event ends.
    virtual function integer getColumnNumber()
    {
        getColumnNumber = parseStream.getColumnNumber();
    }

    // Set the public identifier for this input source.
    task setPublicId(string _publicId)
    {
        publicId = _publicId;
    }

    // Set the system identifier for this input source.
    task setSystemId(string _systemId)
    {
        systemId = _systemId;
    }
}

