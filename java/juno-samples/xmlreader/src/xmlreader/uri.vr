/*
 * Copyright (C) 2005 Newisys, Inc. or its licensors, as applicable.
 *
 * Licensed under the Open Software License version 2.0 (the "License"); you
 * may not use this file except in compliance with the License. You should
 * have received a copy of the License along with this software; if not, you
 * may obtain a copy of the License at
 *
 * http://opensource.org/licenses/osl-2.0.php
 *
 * This software is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

#include "common.vri"

////////////////////////////////////////////////////////////
// URI
////////////////////////////////////////////////////////////

class URI
{
    string protocol;
    string host;
    string path;

    task new(string s = null)
    {
        if (s != null) void = parse(s);
    }

    function bit parse(string s)
    {
        parse = s.match("^(([^:]+):)?(//([^/]+))?([^ ]*)$");
        if (parse) {
            protocol = s.backref(1);
            host = s.backref(3);
            path = s.backref(4);
        }
    }

    function string toString()
    {
        if (protocol != null) {
            toString = { protocol, ":" };
        }
        if (host != null) {
            toString = { toString, "//", host };
        }
        toString = { toString, path };
    }
}

function string resolveRelativeURI(string rel, string base)
{
    URI relURI = new;
    URI baseURI = new;

    if (relURI.parse(rel) &&
        relURI.protocol == null &&
        relURI.host == null &&
        relURI.path != null &&
        baseURI.parse(base)) {

        URI absURI = new;

        absURI.protocol = baseURI.protocol;
        absURI.host = baseURI.host;
        if (!relURI.path.match("^/") && baseURI.path.match("(.*/)[^/]*$")) {
            absURI.path = { baseURI.path.backref(0), relURI.path };
        }
        else {
            absURI.path = relURI.path;
        }

        resolveRelativeURI = absURI.toString();
    } else {
        resolveRelativeURI = rel;
    }
}

