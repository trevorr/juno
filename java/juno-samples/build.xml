<?xml version="1.0"?>
<project name="Juno Samples" default="compile" basedir=".">
    <property environment="env" />
    <property name="src" location="src" />
    <property name="bin" location="bin" />
    <property name="dist" location="dist" />
    <property name="ifgen-tstamp" location="ifgen.tstamp" />
    <property name="ifgen-list" location="ifgen.lst" />
    <property name="build.sysclasspath" value="last" />

    <!-- check that jove-defs.xml exists in the Jove dist -->
    <fail message="jove-defs.xml could not be imported. Is JOVE_HOME set correctly?" >
        <condition>
            <not>
                <or>
                    <available type="file" file="${env.JOVE_HOME}/jove-defs.xml" />
                    <available type="file" file="${env.JOVE_HOME}/java/jove-defs.xml" />
                </or>
            </not>
        </condition>
    </fail>

    <!-- import both locations (for src and bin dists) optionally as at least one will exist -->
    <import file="${env.JOVE_HOME}/jove-defs.xml" optional="true" />
    <import file="${env.JOVE_HOME}/java/jove-defs.xml" optional="true" />

    <target name="init">
        <tstamp />
        <mkdir dir="${bin}" />
    </target>

    <target name="floptest" depends="ifgen, compile" />
    <target name="xmlreader" depends="compile" />

    <target name="ifgen" depends="init,ifgen-taskdef">
        <ifgen srcroot="${src}" tstamp="${ifgen-tstamp}" filelist="${ifgen-list}" genshells="true" forcedefaultclock="true" >
            <fileset dir="${src}" includes="**/*.if" />
        </ifgen>
    </target>

    <target name="compile" depends="init" >
        <javac srcdir="${src}" destdir="${bin}" source="1.5" debug="true">
            <classpath path="${jove.classes}" />
            <classpath path="${randsolver.classes}" />
            <classpath path="../juno-runtime/bin" />
        </javac>
    </target>

    <target name="dist" depends="compile">
        <jar jarfile="${dist}/lib/jove-samples.jar" basedir="${bin}" manifest="manifest.mf" />
    </target>

    <target name="clean">
        <delete dir="${bin}" failonerror="false" />
        <delete includeemptydirs="true" failonerror="false" >
            <fileset dir="${src}" includes="**/*" />
        </delete>
        <delete file="${ifgen-tstamp}" failonerror="false" />
        <delete file="${ifgen-list}" failonerror="false" />
    </target>
</project>
